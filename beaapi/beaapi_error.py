class BEAAPIError(Exception):
    """
    Parent class for errors generated by the API (either invalid query or a problem in
    processing it) or process the response.

    Parameters
    ----------
    message :
        Error message
    """
    # have to include an explicit "Parameters" section, otherwise autodoc (because
    # I'm using type hints) will display a half-baked parameters section

    def __init__(self, message: str):
        super().__init__(message)


html_error_msg = ("An error occurred while executing the application. Please try again"
                  " or contact the administrator.")
empty_err_msg = ("Received empty response from the API. Likely the query timed"
                 " out. Try again with narrower parameters.")


class BEAAPIFailure(BEAAPIError):
    """
    Custom error class for when there is an error in processing the query (e.g.,
    db time-out). The query could be valid.

    Parameters
    ----------
    message :
        Error message
    """

    def __init__(self, message: str):
        super().__init__(message)


no_meta_err_msg = ('API metadata not returned.  Verify that you are using a valid API'
                   ' key, represented as a character string.')
no_data_node_err_msg = ("Could not find Data element in response. Potentially no data"
                        " was available.")
no_data_err_msg = "no data found"
multiple_err_msg = "Multiple errors"


class BEAAPIResponseError(BEAAPIError):
    """
    Custom error for when the query results in an error from the API.
    We strip outer whitespace from the message.
    It may contain a string as the ``APIErrorCode`` attribute.
    If multiple errors are returned, the message is generic and
    check the ``messages`` attribute.

    Parameters
    ----------
    message :
        Error message
    response_size :
        Query response size (int)
    """

    def __init__(self, message: str, response_size: int):
        message = message.strip()
        super().__init__(message)

        # Now for our custom code...
        self.response_size = response_size


class BEAAPIPkgException(BEAAPIError):
    """
    Error in package in processing the reponse to an API request

    Parameters
    ----------
    message :
        Error message
    response_size :
        Query response size (int)
    """

    def __init__(self, message: str, response_size: int):
        message = message.strip()
        super().__init__(message)

        self.response_size = response_size
